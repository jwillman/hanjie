html,
body {
    margin: 0;
    padding: 0;
    height: 100%;
}

body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
}

.page-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
}

.puzzle-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* 
 The grid-wrapper is a positioned container so that column and row hints
 can be absolutely positioned inside it relative to the puzzle itself.
*/
.grid-wrapper {
    position: relative;
}

/* Column hints above the puzzle:
 - Absolute positioning relative to .grid-wrapper
 - Positioned above (bottom:100%) and centered horizontally (transform:translateX(-50%))
 - Using the same column count and cell width ensures perfect alignment.
*/
.column-hints-container {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    display: grid;
    grid-template-columns: repeat(15, 30px);
    text-align: center;
}

.column-hint {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    font-size: 12px;
    padding: 2px;
}

/* Row hints to the left of the puzzle:
 - Absolute positioning relative to .grid-wrapper
 - Positioned to the left (right:100%) and centered vertically (transform:translateY(-50%))
 - Using grid-template-rows: repeat(15, 30px) ensures each hint line up with each row of the puzzle.
*/
.row-hints-container {
    position: absolute;
    top: 50%;
    right: 100%;
    transform: translateY(-50%);
    display: grid;
    grid-template-rows: repeat(15, 30px);
    text-align: right;
}

.row-hint {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    width: 30px;
    font-size: 12px;
    gap: 3px;
}

/* The puzzle grid: 15x15 cells of 30px each */
.grid-container {
    display: grid;
    grid-template-columns: repeat(15, 30px);
    grid-template-rows: repeat(15, 30px);
    gap: 0;
}

.grid-cell {
    width: 30px;
    height: 30px;
    border: 1px solid #ccc;
    box-sizing: border-box;
}

.border-bottom-thick {
    border-bottom: 2px solid #000;
}

.border-right-thick {
    border-right: 2px solid #000;
}

/* No need for top-left-corner anymore */
.top-left-corner {
    display: none;
}
